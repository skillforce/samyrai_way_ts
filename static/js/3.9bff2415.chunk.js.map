{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/message/message.module.css","components/Dialogs/dialogItems/dialogsItems.module.css","components/Dialogs/message/EnterMess/EnterMessage.module.css","components/Dialogs/message/input_output_msg/input.tsx","components/Dialogs/message/input_output_msg/output.tsx","components/Dialogs/message/message.tsx","components/Dialogs/dialogItems/dialogItems.tsx","components/Dialogs/message/EnterMess/EnterMessage.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","Input","props","messages","Output","message","s","inputMess","outputMess","inputMess_mess","outputMess_mess","inputMess_img","outputMess_img","allMess","Message","inputMessage","outputMessage","allInputMess","map","t","className","src","alt","id","allOutputMess","dialog","activeDialog","dialogPhoto","DialogItem","name","photo","path","to","activeClassName","inputTitle","btn","textInput","maxLength50","MaxLengthCreator","ReduxEnterMessageForm","reduxForm","form","pr","onSubmit","handleSubmit","Field","component","TextArea","validate","requiredField","placeholder","dialogs","dialogsItems","Dialogs","dispatch","useDispatch","dialogsData","messagesData","dialogComponents","data","AddOutputMsgActionType","newMessage","compose","connect","state","dialogsPage","withAuthRedirect"],"mappings":"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","file":"static/js/3.9bff2415.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__QEedM\",\"dialogsItems\":\"Dialogs_dialogsItems__3H-S-\",\"messages\":\"Dialogs_messages__1VXb_\",\"inputTitle\":\"Dialogs_inputTitle__ChasF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"message_message__2SPGN\",\"inputMess\":\"message_inputMess__g94Tm\",\"inputMess_mess\":\"message_inputMess_mess__BTYRe\",\"inputMess_img\":\"message_inputMess_img__379je\",\"outputMess\":\"message_outputMess__vf7pF\",\"outputMess_mess\":\"message_outputMess_mess__1Cdfi\",\"outputMess_img\":\"message_outputMess_img__16iB2\",\"input_img\":\"message_input_img__3JmFS\",\"output_img\":\"message_output_img__90_wC\",\"allMess\":\"message_allMess__3PWP6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"dialogsItems_dialog__ECFQe\",\"activeDialog\":\"dialogsItems_activeDialog__3hhWo\",\"dialogPhoto\":\"dialogsItems_dialogPhoto__1Q4nr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputTitle\":\"EnterMessage_inputTitle__389LA\",\"textInput\":\"EnterMessage_textInput__2nNVC\",\"btn\":\"EnterMessage_btn__1dynB\"};","import React from 'react';\r\n\r\n\r\n\r\nexport type InputPropsType = {\r\n    messages: string\r\n}\r\n\r\nconst Input = (props: InputPropsType) => {\r\n    const {messages} = props;\r\n    return (\r\n        <div>{messages}</div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\n\r\nexport type OutputPropsType = {\r\n    messages: string\r\n}\r\n\r\nconst Output = (props: OutputPropsType) => {\r\n    const {messages} = props;\r\n    return (\r\n        <div>{messages}</div>)\r\n}\r\n\r\nexport default Output;","import React from 'react';\r\nimport s from './message.module.css';\r\nimport Input from './input_output_msg/input';\r\nimport Output from './input_output_msg/output';\r\n\r\n\r\nconst {message, inputMess, outputMess, inputMess_mess, outputMess_mess, inputMess_img, outputMess_img, allMess} = s;\r\n\r\nexport type MessageType = {\r\n    inputMessage: InputType[]\r\n    outputMessage: OutputType[]\r\n}\r\nexport type InputType = {\r\n    id: number\r\n    messages: string\r\n}\r\n\r\nexport type OutputType = {\r\n    id: number\r\n    messages: string\r\n}\r\n\r\n\r\nconst Message = (props: MessageType) => {\r\n\r\n    const {inputMessage, outputMessage} = props;\r\n\r\n    const allInputMess = inputMessage.map((t: InputType) => (<div key={t.id} className={inputMess}>\r\n            <div className={inputMess_img}>\r\n                <img src=\"https://www.cartonionline.com/gif/CARTOON/naruto/Naruto-shippuden_01.jpg\" alt={'inputMess'}/>\r\n            </div>\r\n            <div className={inputMess_mess}>\r\n                <Input messages={t.messages}/>\r\n            </div>\r\n        </div>\r\n    ))\r\n    const allOutputMess = outputMessage.map((t: OutputType) => (<div key={t.id} className={outputMess}>\r\n        <div className={outputMess_mess}>\r\n            <Output messages={t.messages}/>\r\n        </div>\r\n        <div className={outputMess_img}>\r\n            <img src=\"https://klike.net/uploads/posts/2020-09/1601453229_1.jpg\" alt={'outputMess'}/>\r\n        </div>\r\n    </div>))\r\n\r\n    return (<div className={allMess}>\r\n        <div className={message}>\r\n            {allInputMess}\r\n        </div>\r\n        <div className={message}>\r\n            <div>{allOutputMess}</div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './dialogsItems.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst {dialog, activeDialog, dialogPhoto} = s;\r\n\r\n\r\nexport type DialogsNamesType = {\r\n    id: number\r\n    name: string\r\n    photo: string\r\n}\r\n\r\n\r\nconst DialogItem = (props: DialogsNamesType) => {\r\n    const {id, name, photo} = props;\r\n    let path = '/dialogs/' + id;\r\n    return (<div className={dialog}>\r\n            <div><NavLink to={path} activeClassName={activeDialog}>{name}</NavLink></div>\r\n            <div className={dialogPhoto}><img src={photo} alt=\"\"/></div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './EnterMessage.module.css';\r\nimport {reduxForm, Field, InjectedFormProps} from 'redux-form';\r\nimport {TextArea} from '../../../common/FormsControls/FormsControls';\r\nimport {MaxLengthCreator, requiredField} from '../../../../utils/validators';\r\n\r\n\r\nexport type MessageType={\r\n    newMessage:string\r\n}\r\n\r\nconst {inputTitle, btn, textInput} = s;\r\n\r\nconst maxLength50=MaxLengthCreator(50)\r\n\r\nconst EnterMessage: React.FC<InjectedFormProps<MessageType>> = (pr) => {\r\n\r\n\r\n    return (<form onSubmit={pr.handleSubmit}>\r\n        <div className={inputTitle}>\r\n            <div className={textInput}>\r\n                <Field component={TextArea}\r\n                       validate={[requiredField,maxLength50]}\r\n                       name ={'newMessage'}\r\n                       placeholder={'Enter new message'}/>\r\n            </div>\r\n            <div className={btn}>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\n\r\n\r\nexport const ReduxEnterMessageForm = reduxForm<MessageType>({form:'Message form'})(EnterMessage)\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './message/message';\r\nimport DialogItem, {DialogsNamesType} from './dialogItems/dialogItems';\r\nimport {MessageType, ReduxEnterMessageForm} from './message/EnterMess/EnterMessage';\r\nimport {useDispatch} from 'react-redux';\r\nimport {AddOutputMsgActionType} from '../../Redux/DialogsPage-reducer';\r\nimport {mapDispatchToPropsType, mapStateToPropsDialogsType} from './DialogsContainer';\r\n\r\n\r\nconst {dialogs, messages, dialogsItems, inputTitle} = s;\r\n\r\nexport type DialogsPropsType = mapStateToPropsDialogsType & mapDispatchToPropsType\r\n\r\nconst Dialogs = (pr:DialogsPropsType) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onSubmit = (data: MessageType) => {\r\n        dispatch(AddOutputMsgActionType(data.newMessage))\r\n\r\n    }\r\n\r\n\r\n    const {dialogsData, messagesData} = pr;\r\n    const {inputMessage, outputMessage} = messagesData;\r\n    const dialogComponents = dialogsData.map((t: DialogsNamesType) => (\r\n        <DialogItem photo={t.photo} id={t.id} name={t.name}/>))\r\n\r\n\r\n    return (<div className={dialogs}>\r\n        <div className={dialogsItems}>\r\n            {dialogComponents}\r\n        </div>\r\n        <div className={messages}>\r\n            <Message inputMessage={inputMessage}\r\n                     outputMessage={outputMessage}/>\r\n        </div>\r\n        <div className={inputTitle}/>\r\n        <ReduxEnterMessageForm onSubmit={onSubmit}/>\r\n    </div>)\r\n\r\n\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../Redux/ReduxStore';\r\nimport {compose, Dispatch} from 'redux';\r\nimport {DialogsNamesType} from './dialogItems/dialogItems';\r\nimport {MessageType} from './message/message';\r\nimport {withAuthRedirect} from '../../HOC/withAuthRedirect';\r\n\r\n\r\nexport type mapStateToPropsDialogsType = {\r\n    dialogsData: DialogsNamesType[]\r\n    messagesData: MessageType\r\n}\r\n\r\nexport type mapDispatchToPropsType = {}\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsDialogsType => {\r\n    return {\r\n        messagesData: state.dialogsPage.messagesData,\r\n        dialogsData: state.dialogsPage.dialogsData,\r\n    }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {}\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<mapStateToPropsDialogsType,{},{},AppStateType>(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}