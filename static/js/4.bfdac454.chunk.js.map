{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Status/status.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Status/StatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/heart.png","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","statusProfile","s","changeStatus","StatusWithHooks","props","useState","isEditMode","setIsEditMode","status","setStatus","useEffect","toggleEditModeOff","updateStatus","className","onBlur","onChange","e","currentTarget","value","type","autoFocus","onClick","onDoubleClick","descriptionBlock","avatar","contactsBlock","fullNameUser","photoBlock","workSearchBlock","searchWork","descrSearch","ProfileInfo","profile","fullName","photos","large","src","alt","avatarBlock","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","href","lookingForAJob","checked","lookingForAJobDescription","Preloader","item","wrapper","userName","messages","times","like","Post","name","message","time","likes","id","heart","postsBlock","posts","MyPosts","React","memo","console","log","postData","addPost","postComponents","map","t","ReduxMyPostForm","onSubmit","data","NewPost","MyPostsContainer","connect","state","profilePage","Profile","ProfileContainerAPI","usersId","this","match","params","userId","userIdLog","getProfile","getStatus","Component","compose","Auth","isFetching","SetUsersProfile","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.bfdac454.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1_fSv\",\"avatar\":\"ProfileInfo_avatar__3AYMw\",\"contactsBlock\":\"ProfileInfo_contactsBlock__1m81m\",\"photoBlock\":\"ProfileInfo_photoBlock__Bph9H\",\"fullNameUser\":\"ProfileInfo_fullNameUser__3t6fW\",\"statusProfile\":\"ProfileInfo_statusProfile__1uy8h\",\"workSearchBlock\":\"ProfileInfo_workSearchBlock__HHdEZ\",\"searchWork\":\"ProfileInfo_searchWork__1mE7l\",\"descrSearch\":\"ProfileInfo_descrSearch__1wBv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusProfile\":\"status_statusProfile__28djk\",\"changeStatus\":\"status_changeStatus__2M_RL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__NV3PC\",\"wrapper\":\"Post_wrapper__1wwZs\",\"times\":\"Post_times__3wAgA\",\"userName\":\"Post_userName__11t48\",\"messages\":\"Post_messages__MzDfT\",\"like\":\"Post_like__3Jakz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1y7j0\",\"posts\":\"MyPosts_posts__3209h\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from './status.module.css';\r\n\r\n\r\nconst {statusProfile, changeStatus} = s\r\n\r\ntype StatusPropsType = {\r\n    status: string | null\r\n    updateStatus: (newMess: string) => void\r\n}\r\n\r\n\r\nexport const StatusWithHooks = (props: StatusPropsType) => {\r\n\r\nconst [isEditMode,setIsEditMode] = useState<boolean>(false);\r\nconst [status,setStatus] = useState<string|null>(props.status);\r\n\r\n  useEffect(()=>{\r\n      setStatus(props.status);\r\n  },[props.status])\r\n\r\n    const toggleEditModeOn = () => {\r\n       setIsEditMode(true)\r\n    }\r\n    const toggleEditModeOff = () => {\r\n        setIsEditMode(false)\r\n        props.updateStatus(status ? status : 'none')\r\n    }\r\n\r\n    const onChangeStatus = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {isEditMode ? <div className={changeStatus}>\r\n                    <input onBlur={toggleEditModeOff} onChange={onChangeStatus}\r\n                           type=\"text\"\r\n                           autoFocus={true}\r\n                           value={status ? status : ''}/>\r\n                    <button onClick={toggleEditModeOff}>Save</button>\r\n                </div> :\r\n                <div onDoubleClick={toggleEditModeOn}\r\n                     className={statusProfile}>status: {props.status ? props.status : 'none'}</div>}\r\n\r\n\r\n        </>)\r\n\r\n}","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport avatarBlock from '../../../img/avatarBlock.png';\r\nimport {ProfileResponseType} from '../ProfileContainer';\r\nimport {StatusWithHooks} from '../Status/StatusWithHooks';\r\n\r\nconst {\r\n    descriptionBlock,\r\n    avatar,\r\n    contactsBlock,\r\n    fullNameUser,\r\n    photoBlock,\r\n    workSearchBlock,\r\n    searchWork,\r\n    descrSearch\r\n} = s;\r\n\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileResponseType | null\r\n    status: null | string\r\n    updateStatus: (newMess: string) => void\r\n}\r\n\r\n\r\nconst ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    const {profile, status, updateStatus} = props;\r\n    if (!profile) {\r\n        return (<div>\r\n            <div className={descriptionBlock}>\r\n                <Preloader/>\r\n            </div>\r\n        </div>)\r\n    } else {\r\n        return (\r\n            <div className={descriptionBlock}>\r\n                <div className={photoBlock}>\r\n                    <div className={fullNameUser}>{profile.fullName ? profile.fullName : 'noName noName'}</div>\r\n                    <div className={avatar}>\r\n                        {profile.photos.large ? <img src={profile.photos.large} alt=\"avatarUser\"/>\r\n                            : <img src={avatarBlock} alt=\"avatarUserNone\"/>}\r\n                    </div>\r\n                    <StatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n                {profile.contacts.facebook ||\r\n                profile.contacts.website ||\r\n                profile.contacts.vk ||\r\n                profile.contacts.twitter ||\r\n                profile.contacts.instagram ||\r\n                profile.contacts.youtube ||\r\n                profile.contacts.github ||\r\n                profile.contacts.mainLink ? <div className={contactsBlock}>\r\n                    Contact information:\r\n                    {profile.contacts.facebook ?\r\n                        <div>Facebook: <a href={profile.contacts.facebook}>facebook</a></div> : ''}\r\n                    {profile.contacts.website ?\r\n                        <div>Web-site: <a href={profile.contacts.website}>{profile.contacts.website}</a></div> : ''}\r\n                    {profile.contacts.vk ?\r\n                        <div>VK : <a href={profile.contacts.vk}>{profile.contacts.vk}</a></div> : ''}\r\n                    {profile.contacts.twitter ?\r\n                        <div>Twitter : <a href={profile.contacts.twitter}>{profile.contacts.twitter}</a></div> : ''}\r\n                    {profile.contacts.instagram ?\r\n                        <div>Instagram : <a href={profile.contacts.instagram}>{profile.contacts.instagram}</a>\r\n                        </div> : ''}\r\n                    {profile.contacts.youtube ?\r\n                        <div>Youtube : <a href={profile.contacts.youtube}>{profile.contacts.youtube}</a></div> : ''}\r\n                    {profile.contacts.github ?\r\n                        <div> Github : <a href={profile.contacts.github}>{profile.contacts.github}</a></div>\r\n                        : ''}\r\n                    {profile.contacts.mainLink ?\r\n                        <div> MainLink: <a href={profile.contacts.mainLink}>{profile.contacts.mainLink}</a></div> : ''}\r\n                </div> : ''}\r\n                <div className={workSearchBlock}>\r\n                    {profile.lookingForAJob ?\r\n                        <div className={searchWork}>I am search a work:<input type=\"checkbox\" checked={true}/></div> :\r\n                        <div className={searchWork}>I'm not going to search work!</div>}\r\n                    {profile.lookingForAJobDescription ?\r\n                        <div className={descrSearch}>Description : {profile.lookingForAJobDescription}</div> : ''}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/heart.68cd17a2.png\";","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport heart from './heart.png';\r\n\r\nconst {item, wrapper, userName, messages, times, like} = s;\r\n\r\nexport type PostType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n    likes: number\r\n    id: number\r\n}\r\n\r\n\r\nconst Post: React.FC<PostType> = ({avatar, name, message, time, likes, id}) => {\r\n    return (\r\n        <div key={id} className={item}>\r\n            <img src={avatar} alt={'avatar'}/>\r\n            <div className={wrapper}>\r\n                <div className={userName}>{name}</div>\r\n                <div className={messages}>{message}</div>\r\n                <div className={times}>{time}</div>\r\n                <div className={like}><img src={heart} alt=\"heart\"/>{likes}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Post;","import React from 'react';\r\nimport Post, {PostType} from './Post/Post';\r\nimport s from './MyPosts.module.css';\r\nimport {MyPostPropsType} from './MyPostsContainer';\r\nimport ReduxMyPostForm, {NewPostMsgType} from './ReduxMyPostForm';\r\n\r\nconst {postsBlock, posts} = s;\r\n\r\nconst MyPosts = React.memo((props: MyPostPropsType) => {\r\n    console.log('you')\r\n\r\n    const {postData, addPost} = props;\r\n\r\n\r\n    const postComponents = postData ? [...postData]\r\n        .map((t: PostType) => (<Post key={t.id}\r\n                                                                           avatar={t.avatar}\r\n                                                                           name={t.name}\r\n                                                                           message={t.message}\r\n                                                                           time={t.time}\r\n                                                                           likes={t.likes}\r\n                                                                           id={t.id}\r\n    />)) : ''\r\n\r\n\r\n    const onSubmit = (data: NewPostMsgType) => {\r\n        addPost(data.NewPost)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={postsBlock}>\r\n            <h3> My post </h3>\r\n            <div>\r\n                <ReduxMyPostForm onSubmit={onSubmit}/>\r\n            </div>\r\n            <div className={posts}>\r\n                {postComponents}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import {\r\n    addPost,\r\n    addPostTypeForMyPostContainer,\r\n} from '../../../Redux/ProfilePage-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {PostDataType} from '../Profile';\r\nimport {stateUsersType} from '../ProfileContainer';\r\n\r\ntype DispatchPropsMyPostsType = {\r\n    addPost: addPostTypeForMyPostContainer\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: stateUsersType): PostDataType => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n\r\n    }\r\n}\r\n\r\nexport type MyPostPropsType = PostDataType & DispatchPropsMyPostsType\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport {PostType} from './MyPosts/Post/Post';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport {ProfileType} from './ProfileContainer';\r\n\r\n\r\nexport type PostDataType = {\r\n    postData: PostType[]\r\n}\r\n\r\n\r\nconst Profile = (props: ProfileType) => {\r\n\r\n    return (<div>\r\n        <ProfileInfo updateStatus={props.updateStatus} status={props.status} profile={props.profile}/>\r\n        <MyPostsContainer/>\r\n    </div>)\r\n\r\n\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    getProfile, getStatus,\r\n    InitialStateProfileType,\r\n    SetUsersProfile, updateStatus, SetUsersForProfileType\r\n} from '../../Redux/ProfilePage-reducer';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {AppStateType} from '../../Redux/ReduxStore';\r\nimport {withAuthRedirect} from '../../HOC/withAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\n\r\ntype ProfileContactsType = {\r\n    github: string | null\r\n    vk: string | null\r\n    facebook: string | null\r\n    instagram: string | null\r\n    twitter: string | null\r\n    website: string | null\r\n    mainLink: string | null\r\n    youtube: string | null\r\n}\r\n\r\ntype ProfilePhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\n\r\nexport type ProfileResponseType = {\r\n    aboutMe: string\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string\r\n    contacts: ProfileContactsType\r\n    photos: ProfilePhotosType\r\n}\r\n\r\n\r\nexport type stateUsersType = {\r\n    profilePage: InitialStateProfileType\r\n}\r\n\r\ntype mapDispatchToPropsUsersType = {\r\n    SetUsersProfile: SetUsersForProfileType\r\n    getProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (newStatus: string) => void\r\n}\r\n\r\n\r\ntype PropsContainerProfileType = ProfileType & mapDispatchToPropsUsersType\r\n\r\n\r\ntype UserIdType = {\r\n    userId: string\r\n\r\n}\r\n\r\ntype PropsAPIContainerType = RouteComponentProps<UserIdType> & PropsContainerProfileType\r\n\r\n\r\nclass ProfileContainerAPI extends React.Component<PropsAPIContainerType> {\r\n\r\n\r\n    componentDidMount() {\r\n        let usersId: number = +this.props.match.params.userId;\r\n        if (!usersId) {\r\n            usersId = +this.props.userIdLog;\r\n        }\r\n        this.props.getProfile(usersId);\r\n        this.props.getStatus(usersId);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nexport type ProfileType = {\r\n    profile: ProfileResponseType | null\r\n    status: null | string\r\n    updateStatus: (newMess: string) => void\r\n    userIdLog: string\r\n}\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string | null\r\n    userIdLog: number | null\r\n    isFetching: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        userIdLog: state.Auth.id,\r\n        isFetching: state.Auth.isFetching\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStateToPropsType, mapDispatchToPropsUsersType, {}, AppStateType>(mapStateToProps, {\r\n        SetUsersProfile,\r\n        getProfile,\r\n        getStatus,\r\n        updateStatus\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainerAPI)"],"sourceRoot":""}