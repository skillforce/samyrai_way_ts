{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Users/User/User.module.css","components/common/Paginator/Paginator.tsx","components/Users/User/User.tsx","components/Users/UsersPage.tsx","../node_modules/reselect/es/index.js","Redux/user-selector.tsx","components/Users/ContainerUsersClass.tsx"],"names":["module","exports","page","s","pageSelect","btnGroup","Paginator","props","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","allPages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","onClick","filter","t","map","p","avatar","statusMSG","fullUsers","btnFoll","btnUnFoll","User","followInProgress","followUsers","unFollowUsers","user","to","id","src","photos","small","avatarBlock","alt","name","status","followed","disabled","some","UsersPage","UsersData","totalUsersCount","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUsersSuper","state","users","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","isFetching","getFollowInProgress","UsersAPIContainer","getUsers","this","Preloader","UnFollowUsers","React","Component","compose","connect"],"mappings":"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","file":"static/js/5.65b850dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnGroup\":\"Paginator_btnGroup__OK-Vi\",\"page\":\"Paginator_page__1joip\",\"pageSelect\":\"Paginator_pageSelect__3ZYng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"User_avatar__L_QS2\",\"statusMSG\":\"User_statusMSG__1Gxub\",\"fullUsers\":\"User_fullUsers__384yS\",\"btnFoll\":\"User_btnFoll__16VLu\",\"btnUnFoll\":\"User_btnUnFoll__FwdLK\"};","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\n\r\nconst {page, pageSelect, btnGroup} = s;\r\n\r\n\r\ntype PaginatorPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged: (t: number) => void\r\n    portionSize: number\r\n}\r\n\r\n\r\nconst Paginator = (props: PaginatorPropsType) => {\r\n\r\n    const {totalItemsCount, pageSize, currentPage, onPageChanged, portionSize} = props;\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let allPages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        allPages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n\r\n\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className={btnGroup}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>Prev</button> }\r\n\r\n            {allPages .filter(t=>t>=leftPortionPageNumber && t<=rightPortionPageNumber)\r\n                .map((p)=>{\r\n                    return <span className={currentPage === p ? pageSelect : page}\r\n                    key={p}\r\n                    onClick={()=>{onPageChanged(p)}}>{p}</span>\r\n                })}\r\n\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber +1)\r\n            }}>Next</button>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Paginator;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './User.module.css';\r\nimport avatarBlock from '../../../img/avatarBlock.png';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {UsersDataType} from '../../../Redux/UsersPage-reducer';\r\n\r\n\r\nconst {avatar, statusMSG, fullUsers, btnFoll, btnUnFoll} = s;\r\ntype UserPropsType = {\r\n    followInProgress: [] | number[]\r\n    unFollowUsers: (userId: number) => void\r\n    followUsers: (userId: number) => void\r\n    user: UsersDataType\r\n\r\n}\r\n\r\nexport const User = (props: UserPropsType) => {\r\n    const {\r\n        followInProgress,\r\n        followUsers,\r\n        unFollowUsers,\r\n        user\r\n    } = props;\r\n\r\n\r\n    return (<div className={fullUsers}>\r\n            <div className={avatar}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img\r\n                        src={user.photos.small ? user.photos.small : avatarBlock}\r\n                        alt=\"avaUser\"/>\r\n                </NavLink>\r\n                <div>\r\n                    <div>{user.name}</div>\r\n                    <div className={statusMSG}>{user.status}</div>\r\n                </div>\r\n            </div>\r\n            <div>{user.followed &&\r\n            <button disabled={followInProgress.some(id => id === user.id)}\r\n                    className={user.followed ? btnFoll : btnUnFoll}\r\n                    onClick={() => {\r\n                        unFollowUsers(user.id)\r\n                    }}>Unfollow</button>}\r\n                {!user.followed &&\r\n                <button disabled={followInProgress.some(id => id === user.id)}\r\n                        className={user.followed ? btnFoll : btnUnFoll} onClick={() => {\r\n                    followUsers(user.id)\r\n                }}>Follow</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {UsersDataType} from '../../Redux/UsersPage-reducer';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport {User} from './User/User';\r\n\r\n\r\ntype UsersPagePropsType = {\r\n    UsersData: UsersDataType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onPageChanged: (t: number) => void\r\n    isFetching: boolean\r\n    followInProgress: [] | number[]\r\n    unFollowUsers: (userId: number) => void\r\n    followUsers: (userId: number) => void\r\n}\r\n\r\nexport const UsersPage = (props: UsersPagePropsType) => {\r\n    const {\r\n        UsersData,\r\n        onPageChanged,\r\n        totalUsersCount,\r\n        pageSize,\r\n        currentPage,\r\n        followInProgress,\r\n        followUsers,\r\n        unFollowUsers\r\n    } = props;\r\n\r\n\r\n    return (<div>\r\n            <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage}\r\n                       onPageChanged={onPageChanged} portionSize={10}/>\r\n            {UsersData.map(t => <User key={t.id} followInProgress={followInProgress}\r\n                                      unFollowUsers={unFollowUsers}\r\n                                      followUsers={followUsers} user={t}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default UsersPage;\r\n\r\n\r\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import {AppStateType} from './ReduxStore';\r\nimport {UsersDataType} from './UsersPage-reducer';\r\nimport {createSelector} from 'reselect';\r\n\r\n\r\ntype getUsersReturnType = (state: AppStateType) => UsersDataType[]\r\n\r\n\r\n\r\n///////////// reselect lib\r\nexport const getUsersSelector: getUsersReturnType = (state) => {\r\n    return state.UsersPage.UsersData\r\n}\r\n\r\nexport const getUsersSuper = createSelector<AppStateType, UsersDataType[] | [], UsersDataType[] | []>\r\n(getUsersSelector, (users: UsersDataType[]) => {\r\n    return users.filter(t => true)\r\n})\r\n/////////////\r\n\r\n\r\nexport const getPageSize = (state: AppStateType): number => {\r\n    return state.UsersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUserCount = (state: AppStateType): number => {\r\n    return state.UsersPage.totalUsersCount;\r\n}\r\n\r\n\r\nexport const getCurrentPage = (state: AppStateType): number => {\r\n    return state.UsersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType): boolean => {\r\n    return state.UsersPage.isFetching\r\n}\r\n\r\nexport const getFollowInProgress = (state: AppStateType): number[] => {\r\n    return state.UsersPage.followInProgress\r\n}\r\n\r\n\r\n\r\n","import {connect} from 'react-redux';\r\nimport {AppStateType} from '../../Redux/ReduxStore';\r\nimport {\r\n    UsersDataType, getUsers, followUsers, UnFollowUsers\r\n} from '../../Redux/UsersPage-reducer';\r\nimport React from 'react';\r\nimport UsersPage from './UsersPage';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {\r\n    getCurrentPage, getFollowInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsersSuper\r\n} from '../../Redux/user-selector';\r\n\r\ntype PropsUserClassType = mapDispatchToPropsUsersType & mapStateToPropsUsersType\r\n\r\n\r\nclass UsersAPIContainer extends React.Component<PropsUserClassType> {\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        const{pageSize,currentPage}=this.props;\r\n        this.props.getUsers(currentPage,pageSize)\r\n    }\r\n\r\n\r\n    onPageChanged = (p: number) => {\r\n        const{getUsers,pageSize}=this.props;\r\n        getUsers(p,pageSize)\r\n    }\r\n\r\n\r\n    render() {\r\n        return this.props.isFetching ?\r\n            <Preloader/> :\r\n            <>\r\n                <UsersPage UsersData={this.props.UsersData}\r\n                           onPageChanged={this.onPageChanged}\r\n                           totalUsersCount={this.props.totalUsersCount}\r\n                           pageSize={this.props.pageSize}\r\n                           currentPage={this.props.currentPage}\r\n                           isFetching={this.props.isFetching}\r\n                           followInProgress={this.props.followInProgress}\r\n                           followUsers={this.props.followUsers}\r\n                           unFollowUsers={this.props.UnFollowUsers}\r\n                />\r\n            </>\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsUsersType => {\r\n    return {\r\n        UsersData: getUsersSuper(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followInProgress: getFollowInProgress(state),\r\n    }\r\n}\r\ntype mapStateToPropsUsersType = {\r\n    UsersData: UsersDataType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number,\r\n    isFetching: boolean\r\n    followInProgress: number[]\r\n}\r\n\r\ntype mapDispatchToPropsUsersType = {\r\n    followUsers: (userId:number) => void\r\n    UnFollowUsers: (userId:number) => void,\r\n    getUsers: (currentPage: number, pageSize: number) => any\r\n}\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<mapStateToPropsUsersType,mapDispatchToPropsUsersType,{},AppStateType>(mapStateToProps,\r\n        {getUsers, followUsers, UnFollowUsers})\r\n)(UsersAPIContainer)"],"sourceRoot":""}